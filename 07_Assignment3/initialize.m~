function S = initialize(N, M, A, num_pop)
% initilisation of the population
%   parameters N:number of constrains   M:number of flight legs
%   A:constrain matrix
%   return the population

% initialize \alpha and \beta
alpha = {};
bneta = {};
[rows, cp]
for i = 1: 
[beta, alpha] = find(A==1);
% initialize S_k
% initialize S cell array
I = [1:M];
S = {};

for k = 1:num_pop
    S_k = [];
    U = I;
    while ~isempty(U)
        % randomly select a row
        i = datasample(U, 1);
        % select j
        temp=alpha;
        while (1)
            j = datasample(temp, 1);
            if isempty(intersect(beta(j), setdiff(I, U)))
                S_k = [S_k, j];
                U = setdiff(U, intersect(i, beta));
                break;
            end
            
            temp = setdiff(temp, j);
            if isempty(temp)
                U = setdiff(U, intersect(i, beta));
                break;
            end
        end
    S{k} = S_k;
    end
    
end
end

